@page "/devices"
@using BlazorApp_arduinoSearch_240824_01.DataModel
@inject NavigationManager NavigationManager
@inject DeviceDiscoveryService DeviceDiscoveryService
@inject IServiceProvider Services
@inject MqttService MqttService
@using System.Net
@inject IJSRuntime JSRuntime

<h3>연결 가능한 장비 목록</h3>

@if (devices != null && devices.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>이름</th>
                <th>IP 주소</th>
                <th>설명</th>
                <th>MQTT 서버</th>
                <th>MQTT 포트</th>
                <th>MQTT 토픽</th>
                <th>연결</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var device in devices)
            {
                <tr>
                    <td>@device.Name</td>
                    <td>@device.Address</td>
                    <td>@device.Description</td>
                    <td>
                        <input type="text" placeholder="MQTT 서버" @bind="@device.MqttServer" />
                    </td>
                    <td>
                        <input type="text" placeholder="MQTT 포트" @bind="@device.MqttPort" />
                    </td>
                    <td>
                        <div>
                            @if (device.MqttTopics != null && device.MqttTopics.Any())
                            {
                                <ul>
                                    @foreach (var topicGroup in device.MqttTopics)
                                    {
                                        <li>
                                            @topicGroup.Key
                                            <ul>
                                                @foreach (var topic in topicGroup.Value)
                                                {
                                                    <li>@topic</li>
                                                }
                                            </ul>
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p>아두이노로부터 토픽을 불러오는 중...</p>
                            }
                        </div>
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => ConnectToDevice(device)" disabled="@(!device.MqttTopics?.Any() ?? true)">연결</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else if (isLoading)
{
    <p>장비를 검색 중입니다...</p>
}
else
{
    <p>장비를 찾을 수 없습니다.</p>
}

@code {
    private List<Device> devices;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync ()
    {
        devices = await DeviceDiscoveryService.DiscoverDevicesAsync();
        isLoading = false;

        // 각 장비의 기본 MQTT 정보를 설정
        foreach (var device in devices)
        {
            device.MqttServer = GetLocalIPAddress();  // 현재 Blazor가 실행 중인 PC의 IP 주소
            device.MqttPort = "1883";                 // 기본 MQTT 포트
        }
    }

    private async Task ConnectToDevice (Device device)
    {
        if (string.IsNullOrEmpty(device.MqttServer) || string.IsNullOrEmpty(device.MqttPort))
        {
            Console.WriteLine("MQTT 서버와 포트 정보를 입력하세요.");
            return;
        }

        Console.WriteLine($"Address: {device.Address}\nMqttPort: {device.MqttPort}\nName: {device.Name}\nMqttServer: {device.MqttServer}");

        // POST 요청을 통해 아두이노로 MQTT 설정 정보 전송
        await MqttService.SendPostRequestToArduino(device.Address, device.MqttServer, int.Parse(device.MqttPort), device.MqttTopics);

        // MQTT 연결 시도
        var mqttTopics = await MqttService.ConnectAndGetTopicsAsync(device.MqttServer, device.Address, int.Parse(device.MqttPort));

        if (MqttService.IsConnected)
        {
            if (mqttTopics != null && mqttTopics.Any() && mqttTopics.First().Value != null && mqttTopics.First().Value.Any())
            {
                // 연결 후 페이지 이동
                var mqttTopicsJson = System.Text.Json.JsonSerializer.Serialize(mqttTopics/* device.MqttTopics */);
                //var encodedMqttTopicsJson = Uri.EscapeDataString(mqttTopicsJson); // JSON 문자열을 URL 인코딩
                var url = $"/LedControl?mqttAddress={device.MqttServer}&ipAddress={device.Address}&mqttPort={device.MqttPort}&mqttTopics={mqttTopicsJson}";
                await JSRuntime.InvokeVoidAsync("openInNewTab", url);
            }
            else
            {
                Console.WriteLine("MQTT 토픽에 값이 없습니다.");
            }
        }
        else
        {
            Console.WriteLine("MQTT 연결이 되지 않았습니다.");
        }
    }

    private string GetLocalIPAddress ()
    {
        var host = Dns.GetHostName();
        var ip = Dns.GetHostAddresses(host)
        .FirstOrDefault(i => i.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork);

        return ip?.ToString() ?? "localhost";
    }
}
